@model Registro.Usuario

@{
    ViewBag.Title = "Registrarse";
}

<head>
</head>

<h2>Registrarse</h2>

@using (Html.BeginForm("AddOrEdit","User", FormMethod.Post )) //especifica qué se hace al dar al botón crear
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Usuario</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.confirmedPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.confirmedPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.confirmedPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-4">
            @Html.CheckBoxFor(model => model.tipo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="from-group">
        <div class="col-md-offset-1 col-md-10">
            <br />
            <form>
                <div class="g-recaptcha" data-sitekey="6LfuoIAUAAAAAN_sPN6BucqgcV8W8GVvL8i6XFRW"></div>                
            </form>
            <br /><br />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Registrarse" class="myButton" />
        </div>
    </div>

    <cc1:GoogleReCaptcha ID="ctrlGoogleReCaptcha" runat="server" PublicKey="6LdXnYAUAAAAADbB9qa0EenYM8r60D7nv1cNGrTT" PrivateKey="6LdXnYAUAAAAADlU9eEGdEJDtyOVGtU5HXo5VNvd" />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-success">@ViewBag.SuccessMessage</label>
        </div>
    </div>
</div>
    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
